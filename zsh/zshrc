# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# [ -e $HOME/.nix-defexpr/channels ] && export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
# [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ] && . $HOME/.nix-profile/etc/profile.d/nix.sh

# vi mode
bindkey -v

# oh-my-zsh {{{
# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh
ZSH_THEME=powerlevel10k/powerlevel10k
DEFAULT_USER="bauerdic"
plugins=(git z history history-substring-search)

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8


# }}}

# Alias' {{{
alias vi="vim"

### LATB mods
alias zl="zfs list -t all -r -o name,used,refer"

# kitty terminal emulator extensions
# most won't work with tmux
alias icat="kitty +kitten icat"
alias d="kitty +kitten diff"

alias l='ls -alh'

alias nv='nvim'

alias stss="(sleep 4; open vnc://127.0.0.1:5901) & ssh -C -4 -L 5901:127.0.0.1:5900"
alias imac='sshpass -e ssh imac'  # put passwd into env SSHPASS

alias dls="docker images"
alias dps="docker ps -a"
alias drm="docker rm"
alias drmi="docker rmi"
alias dri="docker run -it --privileged -v /Volumes/Data:/Volumes/Data"
alias rust-musl-builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'

alias gs='git status '
alias ga='git add '
alias gaa='git add -A '
alias gb='git branch '
alias gc='git commit '
alias gcm='git commit -m '
alias go='git checkout '

alias n="neuron -d ~/zk"
alias nn="neuron -d ~/zk new -e"
alias ns="neuron -d ~/zk search"
alias na="neuron -d ~/zk search -a"
alias xo='xargs -I % open %'
alias xe='xargs -I % $EDITOR %'

# }}}

# Exports {{{

LESSPIPE=`which src-hilite-lesspipe.sh`
export LESSOPEN="| ${LESSPIPE} %s"
export LESS=' -R -X -F '

export BAT_THEME="Solarized (light)"

export GITHUB_USER="latbauerdick"
# export PATH=~/bin:~/.local/bin:~/.npm-global/bin:$PATH:/usr/local/sbin:/usr/local/bin

export MANPAGER="less -X -i" # Donâ€™t clear the screen after quitting a manual page
# export CLICOLOR=1
#export LSCOLORS=Gxfxcxdxbxegedabagacad
#export LS_COLORS=Gxfxcxdxbxegedabagacad
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
# Tell grep to highlight matches
export GREP_OPTIONS='--color=auto'

export HOMEBREW_CASK_OPTS="--appdir=~/Applications"

# }}}
#
# Convert simplified wildcard pattern to regex and grep a file listing using
# Silver Searcher (`brew install the_silver_searcher`)
lsgrep ()
{
    NEEDLE="$(echo $@|sed -E 's/\.([a-z0-9]+)$/\\.\1/'|sed -E 's/\?/./'| sed -E 's/[ *]/.*?/g')";
    ag --depth 3 -S -g "$NEEDLE" 2> /dev/null
  }

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export EDITOR="nvim"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files'

eval "$(zoxide init zsh)"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

[ -f "/home/bauerdic/.ghcup/env" ] && source "/home/bauerdic/.ghcup/env" # ghcup-env

export BAT_THEME="Solarized (light)"

export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# export PATH="/usr/local/opt/arm-gcc-bin@8/bin:$PATH"

autoload -U zmv

# eval $(thefuck --alias)

eval "$(direnv hook zsh)"
nixify() {
  if [ ! -e ./.envrc ]; then
    echo "use nix" > .envrc
    direnv allow
  fi
  if [[ ! -e shell.nix ]] && [[ ! -e default.nix ]]; then
    cat > default.nix <<'EOF'
with import <nixpkgs> {};
mkShell {
  nativeBuildInputs = [
    bashInteractive
  ];
}
EOF
    ${EDITOR:-vim} default.nix
  fi
}

flakify() {
  if [ ! -e flake.nix ]; then
    nix flake new -t github:nix-community/nix-direnv .
  elif [ ! -e .envrc ]; then
    echo "use flake" > .envrc
    direnv allow
  fi
  ${EDITOR:-vim} flake.nix
}

